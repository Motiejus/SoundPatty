### What is this ###
(Very) efficient sound (i.e. record) recognition software based on some pattern matching.

### Where can You use it ###
You can listen to live radio station and log how many your advertisements are played per day
You can scan your music library for multiplied files
You can match special operator messages when trying to initiate a VoIP call (for example, "out of radio coverage")

### What does it do ###
make -s && ./readit sample.cfg > samplefile.txt
the TXT file will have the silence treshold values:
	\d+;\d+
First value is the start position of silence (in seconds)
Second value is the length of the silence (in seconds)

Afterwards, call program like this:
./readit sample.cfg samplefile.txt catch_me.wav
This analyzes the given 2'nd file and returns if it matches the sample.

Also jack is supported:
./readit sample.cfg samplefile.txt jack jack
Then connect a jack client with output port and SoundPatty will say it matches or no.

### How can You collaborate ###
Ask. The idea is now clear and it's working.
Code clean-up and re-structurization tips would be helpful
(although I have an idea for this, it will take time to accomplish)

Good WAV specification I found from:
http://www.dmoz.org/Computers/Multimedia/Music_and_Audio/Audio_Formats/WAV/
is this:
http://www.sonicspot.com/guide/wavefiles.html

Demo I will try to recognize is here (strictly 8 KHz 16 bit PCM wave):
http://www.nch.com.au/acm/8k16bitpcm.wav

### TODO ###
* Remove Jack dependencies where it is not nescesarry (ex. checking WAV files where nescesarry)
* Avoid system calls, implement threaded environment
* Demo with asterisk ;)
